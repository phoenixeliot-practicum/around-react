{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","utils/utils.js","utils/api.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","className","src","logoPath","alt","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onCardDelete","cardStyle","backgroundImage","link","currentUser","useContext","isLiked","likes","some","i","_id","cardLikeButtonClassName","isOwn","owner","cardDeleteButtonClassName","style","onClick","type","name","length","Main","cards","onEditProfile","onAddPlace","onEditAvatar","imageStyle","avatar","about","map","key","Footer","PopupWithForm","title","isOpen","buttonText","onSubmit","onClose","children","noValidate","ImagePopup","renderLoading","isLoading","currentActiveButton","document","querySelector","textContent","api","address","token","groupId","this","_token","_groupId","_address","Promise","all","getCardList","getUserInfo","fetch","headers","authorization","then","res","ok","json","reject","status","catch","err","console","log","method","body","JSON","stringify","cardID","like","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","useEffect","e","preventDefault","id","placeholder","required","minLength","maxLength","pattern","value","onChange","target","EditAvatarPopup","onUpdateAvatar","inputRef","useRef","current","ref","AddPlacePopup","inputNameRef","inputLinkRef","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","setCurrentUser","closeAllPopups","undefined","userData","setCards","cardData","Provider","changeLikeCardStatus","newCard","newCards","c","removeCard","filter","userUpdate","setUserInfo","newUserData","addCard","newCardFull","avatarUpdate","setUserAvatar","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.2fd87e32.chunk.js","sourcesContent":["import React from 'react';\nimport logoPath from '../images/logo.svg';\n\nfunction Header () {\n  return (\n    <header className=\"header page__section\">\n      <img src={logoPath} alt=\"Логотип проекта Mesto\" className=\"logo header__logo\" />\n    </header>\n  )\n}\n\nexport default Header;\n","import React from 'react';\n\nexport const CurrentUserContext = React.createContext();\n","import React from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Card({ card, onCardClick, onCardLike, onCardDelete }) {\n  const cardStyle = { backgroundImage: `url(${card.link})` };\n\n  function handleClick() {\n    onCardClick(card);\n  }\n\n  function handleLikeClick() {\n    onCardLike(card);\n  }\n\n  function handleDeleteClick() {\n    onCardDelete(card);\n  }\n\n  const currentUser = React.useContext(CurrentUserContext);\n\n  const isLiked = card.likes.some(i => i._id === currentUser._id);\n  const cardLikeButtonClassName = `card__like-button ${isLiked && 'card__like-button_is-active'}`;\n\n  const isOwn = card.owner._id === currentUser._id;\n  const cardDeleteButtonClassName = (\n    `card__delete-button ${isOwn ? 'card__delete-button_visible' : 'card__delete-button_hidden'}`\n  );\n\n  return (\n    <li className=\"places__item card\">\n      <div className=\"card__image\" style={cardStyle} onClick={handleClick}>\n      </div>\n      <button type=\"button\" className={cardDeleteButtonClassName} onClick={handleDeleteClick}></button>\n      <div className=\"card__description\">\n        <h2 className=\"card__title\">\n          {card.name}\n        </h2>\n        <div className=\"card__likes\">\n          <button type=\"button\" className={cardLikeButtonClassName} onClick={handleLikeClick}></button>\n          <p className=\"card__like-count\">{card.likes.length}</p>\n        </div>\n      </div>\n    </li>\n  );\n}\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Main({ cards, onEditProfile, onAddPlace, onEditAvatar, onCardClick, onCardLike, onCardDelete }) {\n  const currentUser = React.useContext(CurrentUserContext);\n\n  const imageStyle = { backgroundImage: `url(${currentUser.avatar})` };\n\n  return (\n    <main className=\"content\">\n      <section className=\"profile page__section\">\n        <div className=\"profile__image\" onClick={onEditAvatar} style={imageStyle}></div>\n        <div className=\"profile__info\">\n          <h1 className=\"profile__title\">{currentUser.name}</h1>\n          <button className=\"profile__edit-button\" type=\"button\" onClick={onEditProfile}></button>\n          <p className=\"profile__description\">{currentUser.about}</p>\n        </div>\n        <button className=\"profile__add-button\" type=\"button\" onClick={onAddPlace}></button>\n      </section>\n      <section className=\"places page__section\">\n        <ul className=\"places__list\">\n          {cards.map((card, i) => (\n            <Card\n              key={i}\n              card={card}\n              onCardClick={onCardClick}\n              onCardLike={onCardLike}\n              onCardDelete={onCardDelete}\n            />\n          ))}\n        </ul>\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n","import React from 'react';\n\nfunction Footer() {\n  return (\n    <footer className=\"footer page__section\">\n      <p className=\"footer__copyright\">\n        © 2020 Mesto Russia\n      </p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\n\nfunction PopupWithForm({\n  title,\n  name,\n  isOpen,\n  buttonText = 'Сохранить',\n  onSubmit,\n  onClose,\n  children,\n}) {\n  return (\n    <div className={`popup popup_type_${name} ${isOpen && 'popup_is-opened'}`}>\n      <div className=\"popup__content\">\n        <form className=\"popup__form\" name={name} noValidate onSubmit={onSubmit}>\n          <button type=\"button\" className=\"popup__close\" onClick={onClose}></button>\n          <h3 className=\"popup__title\">{title}</h3>\n          {children}\n          <button type=\"submit\" className=\"button popup__button\">{buttonText}</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default PopupWithForm;\n","import React from 'react';\n\nfunction ImagePopup({ card, onClose }) {\n  return (\n    <div className={`popup popup_type_image ${card && 'popup_is-opened'}`}>\n      <div className=\"popup__content popup__content_content_image\">\n        <button type=\"button\" className=\"popup__close\" onClick={onClose}></button>\n        <img alt={card ? card.name : ''} src={card ? card.link : ''} className=\"popup__image\" />\n        <p className=\"popup__caption\">{card ? card.name : ''}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default ImagePopup;\n","export const renderLoading = (isLoading = false) => {\n  const currentActiveButton = document.querySelector('.popup_is-opened .popup__button');\n  if (isLoading) {\n    currentActiveButton.textContent = 'Загрузка...';\n    return;\n  }\n\n  currentActiveButton.textContent = 'Сохранить';\n};\n","import { renderLoading } from './utils.js';\n\nclass Api {\n  constructor({ address, token, groupId }) {\n    // стандартная реализация -- объект options\n    this._token = token;\n    this._groupId = groupId;\n    this._address = address;\n\n    // Запросы в примере работы выполняются к старому Api, в новом URL изменены.\n  }\n\n  getAppInfo() {\n    return Promise.all([this.getCardList(), this.getUserInfo()]);\n  }\n\n  getCardList() {\n    return fetch(`${this._address}/${this._groupId}/cards`, {\n      headers: {\n        authorization: this._token,\n      },\n    })\n      .then(res => res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`))\n      .catch(err => console.log(`Загрузка карточек: ${err}`));\n  }\n\n  addCard({ name, link }) {\n    renderLoading(true);\n\n    return fetch(`${this._address}/${this._groupId}/cards`, {\n      method: 'POST',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        name,\n        link,\n      }),\n    })\n      .then(res => res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`))\n      .catch(err => console.log(`Добавление карточки: ${err}`));\n  }\n\n  removeCard(cardID) {\n    return fetch(`${this._address}/${this._groupId}/cards/${cardID}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._token,\n      },\n    })\n      .then(res => res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`))\n      .catch(err => console.log(`При удалении карточки: ${err}`));\n  }\n\n  getUserInfo() {\n    return fetch(`${this._address}/${this._groupId}/users/me`, {\n      headers: {\n        authorization: this._token,\n      },\n    })\n      .then(res => res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`))\n      .catch(err => console.log(`Загрузка информации о пользователе: ${err}`));\n  }\n\n  setUserInfo({ name, about }) {\n    renderLoading(true);\n\n    return fetch(`${this._address}/${this._groupId}/users/me`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        name,\n        about,\n      }),\n    })\n      .then(res => res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`))\n      .catch(err => console.log(`При обновлении информации о пользователе: ${err}`));\n  }\n\n  setUserAvatar({ avatar }) {\n    renderLoading(true);\n\n    return fetch(`${this._address}/${this._groupId}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        avatar,\n      }),\n    })\n      .then(res => res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`))\n      .catch(err => console.log(`При изменении аватара пользователя: ${err}`));\n  }\n\n  changeLikeCardStatus(cardID, like) {\n    console.log(cardID, like);\n    // Обычная реализация: 2 разных метода для удаления и постановки лайка.\n    return fetch(`${this._address}/${this._groupId}/cards/like/${cardID}`, {\n      method: like ? 'PUT' : 'DELETE',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json',\n      },\n    })\n      .then(res => res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`))\n      .catch(err => console.log(`Изменения статуса лайка: ${err}`));\n  }\n}\n\nconst api = new Api({\n  address: 'https://praktikum.tk',\n  groupId: `cohort0`,\n  token: `80a75492-21c5-4330-a02f-308029e94b63`,\n});\n\nexport default api;\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction EditProfilePopup({ isOpen, onUpdateUser, onClose }) {\n  const [name, setName] = React.useState('');\n  const [description, setDescription] = React.useState('');\n\n  function handleNameChange(e) {\n    setName(e.target.value);\n  }\n\n  function handleDescriptionChange(e) {\n    setDescription(e.target.value);\n  }\n\n  const currentUser = React.useContext(CurrentUserContext);\n\n  React.useEffect(() => {\n    if (currentUser) {\n      setName(currentUser.name);\n      setDescription(currentUser.about);\n    }\n  }, [currentUser]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    onUpdateUser({\n      name,\n      about: description,\n    });\n  }\n\n  return (\n    <PopupWithForm\n      isOpen={isOpen} onSubmit={handleSubmit} onClose={onClose} title=\"Редактировать профиль\" name=\"edit\"\n    >\n      <label className=\"popup__label\">\n        <input type=\"text\" name=\"userName\" id=\"owner-name\"\n               className=\"popup__input popup__input_type_name\" placeholder=\"Имя\"\n               required minLength=\"2\" maxLength=\"40\" pattern=\"[a-zA-Zа-яА-Я -]{1,}\"\n               value={name} onChange={handleNameChange} />\n        <span className=\"popup__error\" id=\"owner-name-error\"></span>\n      </label>\n      <label className=\"popup__label\">\n        <input type=\"text\" name=\"userDescription\" id=\"owner-description\"\n               className=\"popup__input popup__input_type_description\" placeholder=\"Занятие\"\n               required minLength=\"2\" maxLength=\"200\"\n               value={description} onChange={handleDescriptionChange} />\n        <span className=\"popup__error\" id=\"owner-description-error\"></span>\n      </label>\n    </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction EditAvatarPopup({ isOpen, onUpdateAvatar, onClose }) {\n  const inputRef = React.useRef();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    onUpdateAvatar({\n      avatar: inputRef.current.value,\n    });\n  }\n\n  return (\n    <PopupWithForm\n      isOpen={isOpen} onSubmit={handleSubmit} onClose={onClose} title=\"Обновить аватар\" name=\"edit-avatar\"\n    >\n\n      <label className=\"popup__label\">\n        <input type=\"url\" name=\"avatar\" id=\"owner-avatar\"\n               className=\"popup__input popup__input_type_description\" placeholder=\"Ссылка на изображение\"\n               required ref={inputRef} />\n        <span className=\"popup__error\" id=\"owner-avatar-error\"></span>\n      </label>\n    </PopupWithForm>\n  );\n}\n\nexport default EditAvatarPopup;\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction AddPlacePopup({ isOpen, onAddPlace, onClose }) {\n  const inputNameRef = React.useRef();\n  const inputLinkRef = React.useRef();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    onAddPlace({\n      name: inputNameRef.current.value,\n      link: inputLinkRef.current.value,\n    });\n  }\n\n  return (\n    <PopupWithForm\n      isOpen={isOpen} onSubmit={handleSubmit} onClose={onClose} title=\"Новое место\" name=\"new-card\"\n    >\n      <label className=\"popup__label\">\n        <input type=\"text\" name=\"name\" id=\"place-name\"\n               className=\"popup__input popup__input_type_card-name\" placeholder=\"Название\"\n               required minLength=\"1\" maxLength=\"30\" ref={inputNameRef} />\n        <span className=\"popup__error\" id=\"place-name-error\"></span>\n      </label>\n      <label className=\"popup__label\">\n        <input type=\"url\" name=\"link\" id=\"place-link\"\n               className=\"popup__input popup__input_type_url\" placeholder=\"Ссылка на картинку\"\n               required ref={inputLinkRef} />\n        <span className=\"popup__error\" id=\"place-link-error\"></span>\n      </label>\n    </PopupWithForm>\n  );\n}\n\nexport default AddPlacePopup;\n","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n\n  const [selectedCard, setSelectedCard] = React.useState();\n\n  const [currentUser, setCurrentUser] = React.useState('');\n\n  React.useEffect(() => {\n    api.getUserInfo().then((userData) => {\n      setCurrentUser(userData);\n    });\n  }, []);\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard(undefined);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function handleUpdateUser(userUpdate) {\n    api.setUserInfo(userUpdate).then((newUserData) => {\n      setCurrentUser(newUserData);\n\n      closeAllPopups();\n    });\n  }\n\n  function handleUpdateAvatar(avatarUpdate) {\n    api.setUserAvatar(avatarUpdate).then((newUserData) => {\n      setCurrentUser(newUserData);\n\n      closeAllPopups();\n    });\n  }\n\n  const [cards, setCards] = React.useState([]);\n\n  React.useEffect(() => {\n    api.getCardList().then((cardData) => {\n      setCards(cardData);\n    });\n  }, []);\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n      const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n      setCards(newCards);\n    });\n  }\n\n  function handleCardDelete(card) {\n    api.removeCard(card._id).then(() => {\n      const newCards = cards.filter((c) => c._id !== card._id);\n      setCards(newCards);\n    });\n  }\n\n  function handleAddPlaceSubmit(newCard) {\n    api.addCard(newCard).then((newCardFull) => {\n      setCards([\n        ...cards,\n        newCardFull,\n      ]);\n\n      closeAllPopups();\n    });\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page__content\">\n        <Header />\n        <Main\n          cards={cards}\n          onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n          onEditAvatar={handleEditAvatarClick}\n          onCardClick={handleCardClick}\n          onCardLike={handleCardLike}\n          onCardDelete={handleCardDelete}\n        />\n        <Footer />\n\n        <EditProfilePopup isOpen={isEditProfilePopupOpen} onUpdateUser={handleUpdateUser} onClose={closeAllPopups} />\n        <AddPlacePopup isOpen={isAddPlacePopupOpen} onAddPlace={handleAddPlaceSubmit} onClose={closeAllPopups} />\n        <PopupWithForm title=\"Вы уверены?\" name=\"remove-card\" buttonText=\"Да\" />\n        <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onUpdateAvatar={handleUpdateAvatar} onClose={closeAllPopups} />\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.d198f32f.svg\";"],"sourceRoot":""}